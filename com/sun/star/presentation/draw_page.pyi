# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Service Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.presentation
from __future__ import annotations
import typing
from ..document.link_target import LinkTarget as LinkTarget_ca220c5c
from ..drawing.draw_page import DrawPage as DrawPage_a56e0aff
if typing.TYPE_CHECKING:
    from com.sun.star.presentation.FadeEffect import FadeEffectProto  # type: ignore
    from com.sun.star.presentation.AnimationSpeed import AnimationSpeedProto  # type: ignore

class DrawPage(LinkTarget_ca220c5c, DrawPage_a56e0aff):
    """
    Service Class

    This is the service provided by a com.sun.star.drawing.DrawPage inside a PresentationDocument.
    
    **since**
    
        LibreOffice 6.1

    See Also:
        `API DrawPage <https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1presentation_1_1DrawPage.html>`_
    """
    @property
    def Change(self) -> int:
        """
        specifies how the page change is triggered.
        
        If this is 0, the user must click to start each object animation and to change the page. If set to 1, the page is automatically switched. If it is set to 2, all object effects run automatically, but the user has to click on the page to change it.
        """
        ...
    @Change.setter
    def Change(self, value: int) -> None:
        ...
    @property
    def DateTimeFormat(self) -> int:
        """
        defines the format that is used to format a date and time text field on this page.
        
        This is only used if IsDateTimeFixed is FALSE.
        """
        ...
    @DateTimeFormat.setter
    def DateTimeFormat(self, value: int) -> None:
        ...
    @property
    def DateTimeText(self) -> str:
        """
        defines the text that is displayed in a date and time textfield rendered on this page.
        
        This value is only used if IsDateTimeFixed is TRUE.
        """
        ...
    @DateTimeText.setter
    def DateTimeText(self, value: str) -> None:
        ...
    @property
    def Duration(self) -> int:
        """
        If the property com.sun.star.drawing.DrawPage.Change is set to 1, this is the time in seconds this page is shown before switching to the next page.
        """
        ...
    @Duration.setter
    def Duration(self, value: int) -> None:
        ...
    @property
    def Effect(self) -> FadeEffectProto:
        """
        This is the effect that is used to fade in this page.
        """
        ...
    @Effect.setter
    def Effect(self, value: FadeEffectProto) -> None:
        ...
    @property
    def FooterText(self) -> str:
        """
        defines the text that is displayed in a footer textfield rendered on this page.
        """
        ...
    @FooterText.setter
    def FooterText(self, value: str) -> None:
        ...
    @property
    def HeaderText(self) -> str:
        """
        defines the text that is displayed in a header textfield rendered on this page.
        """
        ...
    @HeaderText.setter
    def HeaderText(self, value: str) -> None:
        ...
    @property
    def HighResDuration(self) -> float:
        """
        If the property com.sun.star.drawing.DrawPage.Change is set to 1, this is the time in seconds this page is shown before switching to the next page, also permitting sub-second precision here.
        """
        ...
    @HighResDuration.setter
    def HighResDuration(self, value: float) -> None:
        ...
    @property
    def IsDateTimeFixed(self) -> bool:
        """
        defines if a date and time text field shows a fixed string value or the current date on this page.
        """
        ...
    @IsDateTimeFixed.setter
    def IsDateTimeFixed(self, value: bool) -> None:
        ...
    @property
    def IsDateTimeVisible(self) -> bool:
        """
        defines if a date and time presentation shape from the master page is visible on this page.
        """
        ...
    @IsDateTimeVisible.setter
    def IsDateTimeVisible(self, value: bool) -> None:
        ...
    @property
    def IsFooterVisible(self) -> bool:
        """
        defines if a footer presentation shape from the master page is visible on this page.
        """
        ...
    @IsFooterVisible.setter
    def IsFooterVisible(self, value: bool) -> None:
        ...
    @property
    def IsHeaderVisible(self) -> bool:
        """
        defines if a header presentation shape from the master page is visible on this page.
        """
        ...
    @IsHeaderVisible.setter
    def IsHeaderVisible(self, value: bool) -> None:
        ...
    @property
    def IsPageNumberVisible(self) -> bool:
        """
        defines if a page number presentation shape from the master page is visible on this page.
        """
        ...
    @IsPageNumberVisible.setter
    def IsPageNumberVisible(self, value: bool) -> None:
        ...
    @property
    def Layout(self) -> int:
        """
        If this property is not ZERO, this number specifies a presentation layout for this page.
        """
        ...
    @Layout.setter
    def Layout(self, value: int) -> None:
        ...
    @property
    def Speed(self) -> AnimationSpeedProto:
        """
        Defines the speed of the fade-in effect of this page.
        """
        ...
    @Speed.setter
    def Speed(self, value: AnimationSpeedProto) -> None:
        ...
    @property
    def TransitionDuration(self) -> float:
        """
        Specifies slide transition time in seconds.
        
        **since**
        
            LibreOffice 6.1
        """
        ...
    @TransitionDuration.setter
    def TransitionDuration(self, value: float) -> None:
        ...