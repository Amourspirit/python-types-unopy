# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.rendering
# Libre Office Version: 7.4
from typing_extensions import Literal
import typing


class Panose(object):
    """
    Struct Class


    See Also:
        `API Panose <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1rendering_1_1Panose.html>`_
    """
    typeName: Literal['com.sun.star.rendering.Panose']

    def __init__(self, FamilyType: typing.Optional[int] = ..., SerifStyle: typing.Optional[int] = ..., Weight: typing.Optional[int] = ..., Proportion: typing.Optional[int] = ..., Contrast: typing.Optional[int] = ..., StrokeVariation: typing.Optional[int] = ..., ArmStyle: typing.Optional[int] = ..., Letterform: typing.Optional[int] = ..., Midline: typing.Optional[int] = ..., XHeight: typing.Optional[int] = ...) -> None:
        """
        Constructor

        Arguments:
            FamilyType (int, optional): FamilyType value.
            SerifStyle (int, optional): SerifStyle value.
            Weight (int, optional): Weight value.
            Proportion (int, optional): Proportion value.
            Contrast (int, optional): Contrast value.
            StrokeVariation (int, optional): StrokeVariation value.
            ArmStyle (int, optional): ArmStyle value.
            Letterform (int, optional): Letterform value.
            Midline (int, optional): Midline value.
            XHeight (int, optional): XHeight value.
        """
        ...


    @property
    def FamilyType(self) -> int:
        """
        PanoseFamilyTypes.
        """
        ...

    @FamilyType.setter
    def FamilyType(self, value: int) -> None:
        ...

    @property
    def SerifStyle(self) -> int:
        """
        PanoseSerifStyle.
        """
        ...

    @SerifStyle.setter
    def SerifStyle(self, value: int) -> None:
        ...

    @property
    def Weight(self) -> int:
        """
        PanoseWeight.
        """
        ...

    @Weight.setter
    def Weight(self, value: int) -> None:
        ...

    @property
    def Proportion(self) -> int:
        """
        PanoseProportion.
        """
        ...

    @Proportion.setter
    def Proportion(self, value: int) -> None:
        ...

    @property
    def Contrast(self) -> int:
        """
        PanoseContrast.
        """
        ...

    @Contrast.setter
    def Contrast(self, value: int) -> None:
        ...

    @property
    def StrokeVariation(self) -> int:
        """
        PanoseStrokeVariation.
        """
        ...

    @StrokeVariation.setter
    def StrokeVariation(self, value: int) -> None:
        ...

    @property
    def ArmStyle(self) -> int:
        """
        PanoseArmStyle.
        """
        ...

    @ArmStyle.setter
    def ArmStyle(self, value: int) -> None:
        ...

    @property
    def Letterform(self) -> int:
        """
        PanoseLetterForm.
        """
        ...

    @Letterform.setter
    def Letterform(self, value: int) -> None:
        ...

    @property
    def Midline(self) -> int:
        """
        PanoseMidline.
        """
        ...

    @Midline.setter
    def Midline(self, value: int) -> None:
        ...

    @property
    def XHeight(self) -> int:
        """
        PanoseXHeight.
        """
        ...

    @XHeight.setter
    def XHeight(self, value: int) -> None:
        ...

