# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Service Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.text.textfield
from ..text_field import TextField as TextField_90260a56

class Author(TextField_90260a56):
    """
    Service Class

    specifies service of an author text field.

    See Also:
        `API Author <https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1text_1_1textfield_1_1Author.html>`_
    """
    @property
    def AuthorFormat(self) -> int:
        """
        this is the display format for this field
        """
        ...
    @AuthorFormat.setter
    def AuthorFormat(self, value: int) -> None:
        ...
    @property
    def Content(self) -> str:
        """
        the is the content of this field
        """
        ...
    @Content.setter
    def Content(self, value: str) -> None:
        ...
    @property
    def CurrentPresentation(self) -> str:
        """
        contains the current content of the text field.
        
        This property is especially useful for import/export purposes.
        """
        ...
    @CurrentPresentation.setter
    def CurrentPresentation(self, value: str) -> None:
        ...
    @property
    def FullName(self) -> bool:
        """
        determines whether the full name of the author is displayed rather than the initials.
        """
        ...
    @FullName.setter
    def FullName(self, value: bool) -> None:
        ...
    @property
    def IsFixed(self) -> bool:
        """
        If this flag is set to false the author will be overridden by the current author each time the document is saved.
        """
        ...
    @IsFixed.setter
    def IsFixed(self, value: bool) -> None:
        ...

