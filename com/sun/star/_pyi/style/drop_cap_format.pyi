# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.style
# Libre Office Version: 7.4
from typing_extensions import Literal
import typing


class DropCapFormat(object):
    """
    Struct Class

    This struct describes drop caps at a paragraph object.

    See Also:
        `API DropCapFormat <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1style_1_1DropCapFormat.html>`_
    """
    typeName: Literal['com.sun.star.style.DropCapFormat']

    def __init__(self, Lines: typing.Optional[int] = ..., Count: typing.Optional[int] = ..., Distance: typing.Optional[int] = ...) -> None:
        """
        Constructor

        Arguments:
            Lines (int, optional): Lines value.
            Count (int, optional): Count value.
            Distance (int, optional): Distance value.
        """
        ...


    @property
    def Lines(self) -> int:
        """
        This is the number of lines used for a drop cap.
        """
        ...

    @Lines.setter
    def Lines(self, value: int) -> None:
        ...

    @property
    def Count(self) -> int:
        """
        This is the number of characters in the drop cap.
        """
        ...

    @Count.setter
    def Count(self, value: int) -> None:
        ...

    @property
    def Distance(self) -> int:
        """
        This is the distance between the drop cap in the following text.
        """
        ...

    @Distance.setter
    def Distance(self, value: int) -> None:
        ...

