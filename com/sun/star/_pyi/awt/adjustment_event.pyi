# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.awt
# Libre Office Version: 7.4
from typing_extensions import Literal
from ..lang.event_object import EventObject as EventObject_a3d70b03
from ..uno.x_interface import XInterface as XInterface_8f010a43
import typing
from .adjustment_type import AdjustmentType as AdjustmentType_bd050c15


class AdjustmentEvent(EventObject_a3d70b03):
    """
    Struct Class

    adjustment event emitted by adjustable objects.

    See Also:
        `API AdjustmentEvent <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1awt_1_1AdjustmentEvent.html>`_
    """
    typeName: Literal['com.sun.star.awt.AdjustmentEvent']

    def __init__(self, Source: typing.Optional[XInterface_8f010a43] = ..., Value: typing.Optional[int] = ..., Type: typing.Optional[AdjustmentType_bd050c15] = ...) -> None:
        """
        Constructor

        Arguments:
            Source (XInterface, optional): Source value.
            Value (int, optional): Value value.
            Type (AdjustmentType, optional): Type value.
        """
        ...


    @property
    def Value(self) -> int:
        """
        contains the current value in the adjustment event.
        """
        ...

    @Value.setter
    def Value(self, value: int) -> None:
        ...

    @property
    def Type(self) -> AdjustmentType_bd050c15:
        """
        contains the type of the adjustment event.
        """
        ...

    @Type.setter
    def Type(self, value: AdjustmentType_bd050c15) -> None:
        ...

