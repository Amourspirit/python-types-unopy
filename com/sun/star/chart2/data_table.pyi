# coding: utf-8
#
# Copyright 2023-2024 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Service Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 2024.2
# Namespace: com.sun.star.chart2
from __future__ import annotations
from ..beans.property_set import PropertySet as PropertySet_b0e70ba2
from .x_data_table import XDataTable as XDataTable_ac570b06
from ..drawing.fill_properties import FillProperties as FillProperties_f1200da8
from ..drawing.line_properties import LineProperties as LineProperties_f13f0da9

class DataTable(PropertySet_b0e70ba2, FillProperties_f1200da8, LineProperties_f13f0da9, XDataTable_ac570b06):
    """
    Service Class

    Describes a data table for a Diagram.
    
    **since**
    
        LibreOffice 7.5

    See Also:
        `API DataTable <https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1chart2_1_1DataTable.html>`_
    """
    @property
    def HBorder(self) -> bool:
        """
        Show the horizontal border of the data table.
        """
        ...
    @HBorder.setter
    def HBorder(self, value: bool) -> None:
        ...
    @property
    def Keys(self) -> bool:
        """
        Show the legend keys in the data table.
        """
        ...
    @Keys.setter
    def Keys(self, value: bool) -> None:
        ...
    @property
    def Outline(self) -> bool:
        """
        Show the outline of the data table.
        """
        ...
    @Outline.setter
    def Outline(self, value: bool) -> None:
        ...
    @property
    def VBorder(self) -> bool:
        """
        Show the vertical border of the data table.
        """
        ...
    @VBorder.setter
    def VBorder(self, value: bool) -> None:
        ...

