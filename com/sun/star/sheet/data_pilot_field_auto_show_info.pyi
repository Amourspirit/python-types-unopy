# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sheet
# Libre Office Version: 7.4
import typing


class DataPilotFieldAutoShowInfo(object):
    """
    Struct Class

    contains the auto show information of a DataPilotField.
    
    If enabled, only a number of items with the highest or lowest result values are shown. The other items are hidden automatically.

    See Also:
        `API DataPilotFieldAutoShowInfo <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1sheet_1_1DataPilotFieldAutoShowInfo.html>`_
    """
    typeName: str = 'com.sun.star.sheet.DataPilotFieldAutoShowInfo'

    def __init__(self, IsEnabled: typing.Optional[bool] = ..., ShowItemsMode: typing.Optional[int] = ..., ItemCount: typing.Optional[int] = ..., DataField: typing.Optional[str] = ...) -> None:
        """
        Constructor

        Arguments:
            IsEnabled (bool, optional): IsEnabled value.
            ShowItemsMode (int, optional): ShowItemsMode value.
            ItemCount (int, optional): ItemCount value.
            DataField (str, optional): DataField value.
        """
        ...

    @property
    def IsEnabled(self) -> bool:
        """
        specifies whether the AutoShow feature is enabled or not.
        """
        ...
    @IsEnabled.setter
    def IsEnabled(self, value: bool) -> None:
        ...
    @property
    def ShowItemsMode(self) -> int:
        """
        specifies the mode which items have to be shown.
        """
        ...
    @ShowItemsMode.setter
    def ShowItemsMode(self, value: int) -> None:
        ...
    @property
    def ItemCount(self) -> int:
        """
        specifies the number of the items to show.
        """
        ...
    @ItemCount.setter
    def ItemCount(self, value: int) -> None:
        ...
    @property
    def DataField(self) -> str:
        """
        specifies the field where the values to show and select are taken from.
        """
        ...
    @DataField.setter
    def DataField(self, value: str) -> None:
        ...

