# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.uno
# Libre Office Version: 7.4
from __future__ import annotations
from com.sun.star import UnoEnumProto

class TypeClassProto(UnoEnumProto):
    ANY: UnoEnumProto
    ARRAY: UnoEnumProto
    BOOLEAN: UnoEnumProto
    BYTE: UnoEnumProto
    CHAR: UnoEnumProto
    CONSTANT: UnoEnumProto
    CONSTANTS: UnoEnumProto
    DOUBLE: UnoEnumProto
    ENUM: UnoEnumProto
    EXCEPTION: UnoEnumProto
    FLOAT: UnoEnumProto
    HYPER: UnoEnumProto
    INTERFACE: UnoEnumProto
    INTERFACE_ATTRIBUTE: UnoEnumProto
    INTERFACE_METHOD: UnoEnumProto
    LONG: UnoEnumProto
    MODULE: UnoEnumProto
    PROPERTY: UnoEnumProto
    SEQUENCE: UnoEnumProto
    SERVICE: UnoEnumProto
    SHORT: UnoEnumProto
    SINGLETON: UnoEnumProto
    STRING: UnoEnumProto
    STRUCT: UnoEnumProto
    TYPE: UnoEnumProto
    TYPEDEF: UnoEnumProto
    UNION: UnoEnumProto
    UNKNOWN: UnoEnumProto
    UNSIGNED_HYPER: UnoEnumProto
    UNSIGNED_LONG: UnoEnumProto
    UNSIGNED_SHORT: UnoEnumProto
    VOID: UnoEnumProto

ANY: TypeClassProto
"""
reflecting the any type; anys can carry any UNO value except of any values
"""
ARRAY: TypeClassProto
"""
Deprecated, UNOIDL does not have an array concept.
"""
BOOLEAN: TypeClassProto
"""
reflecting the boolean type; true and false
"""
BYTE: TypeClassProto
"""
reflecting the 8-bit ordinal type
"""
CHAR: TypeClassProto
"""
reflecting the 16-bit unicode character type
"""
CONSTANT: TypeClassProto
"""
reflecting constants
"""
CONSTANTS: TypeClassProto
"""
reflecting constants groups
"""
DOUBLE: TypeClassProto
"""
reflecting the 64-bit floating point type
"""
ENUM: TypeClassProto
"""
reflecting enum types
"""
EXCEPTION: TypeClassProto
"""
reflecting exception types
"""
FLOAT: TypeClassProto
"""
reflecting the 32-bit floating point type
"""
HYPER: TypeClassProto
"""
reflecting the signed 64-bit ordinal type
"""
INTERFACE: TypeClassProto
"""
reflecting interface types
"""
INTERFACE_ATTRIBUTE: TypeClassProto
"""
reflecting interface attributes
"""
INTERFACE_METHOD: TypeClassProto
"""
reflecting interface methods
"""
LONG: TypeClassProto
"""
reflecting the signed 32-bit ordinal type
"""
MODULE: TypeClassProto
"""
reflecting modules
"""
PROPERTY: TypeClassProto
"""
reflecting properties
"""
SEQUENCE: TypeClassProto
"""
reflecting sequence types
"""
SERVICE: TypeClassProto
"""
reflecting services
"""
SHORT: TypeClassProto
"""
reflecting the signed 16-bit ordinal type
"""
SINGLETON: TypeClassProto
"""
reflecting singletons
"""
STRING: TypeClassProto
"""
reflecting the string type; strings of unicode characters
"""
STRUCT: TypeClassProto
"""
reflecting compound types
"""
TYPE: TypeClassProto
"""
reflecting the meta type
"""
TYPEDEF: TypeClassProto
"""
reflecting typedefed types referencing other types
"""
UNION: TypeClassProto
"""
Deprecated, UNOIDL does not have a union concept.
"""
UNKNOWN: TypeClassProto
"""
reflecting the unreflectable type
"""
UNSIGNED_HYPER: TypeClassProto
"""
reflecting the unsigned 64-bit ordinal type
"""
UNSIGNED_LONG: TypeClassProto
"""
reflecting the unsigned 32-bit type
"""
UNSIGNED_SHORT: TypeClassProto
"""
reflecting the unsigned 16-bit ordinal type
"""
VOID: TypeClassProto
"""
reflecting the void type; denotes no type
"""

