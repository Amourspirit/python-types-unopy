# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Service Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.text
from __future__ import annotations
from abc import ABC

class LineNumberingProperties(ABC):
    """
    Service Class

    provides access to the settings of the line numbering.
    
    **since**
    
        OOo 2.0

    See Also:
        `API LineNumberingProperties <https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1text_1_1LineNumberingProperties.html>`_
    """
    @property
    def CharStyleName(self) -> str:
        """
        The name of the character style that is used for the line number.
        """
        ...
    @CharStyleName.setter
    def CharStyleName(self, value: str) -> None:
        ...
    @property
    def CountEmptyLines(self) -> bool:
        """
        If TRUE, empty lines are counted.
        """
        ...
    @CountEmptyLines.setter
    def CountEmptyLines(self, value: bool) -> None:
        ...
    @property
    def CountLinesInFrames(self) -> bool:
        """
        If TRUE, lines in frames are included in counting.
        """
        ...
    @CountLinesInFrames.setter
    def CountLinesInFrames(self, value: bool) -> None:
        ...
    @property
    def Distance(self) -> int:
        """
        specifies the distance between the line number and the start or end of the text area.
        """
        ...
    @Distance.setter
    def Distance(self, value: int) -> None:
        ...
    @property
    def Interval(self) -> int:
        """
        Line numbers are shown on every Intervalth line.
        """
        ...
    @Interval.setter
    def Interval(self, value: int) -> None:
        ...
    @property
    def IsOn(self) -> bool:
        """
        If TRUE, line numbering is used.
        """
        ...
    @IsOn.setter
    def IsOn(self, value: bool) -> None:
        ...
    @property
    def NumberPosition(self) -> int:
        """
        specifies the position of the line number (constant LineNumberPositions left/right/inside/outside).
        """
        ...
    @NumberPosition.setter
    def NumberPosition(self, value: int) -> None:
        ...
    @property
    def NumberingType(self) -> int:
        """
        specifies the type of the numbering.
        """
        ...
    @NumberingType.setter
    def NumberingType(self, value: int) -> None:
        ...
    @property
    def RestartAtEachPage(self) -> bool:
        """
        specifies if the line numbering should start from the beginning at each page.
        
        If set to FALSE the line numbering will be continuous.
        
        **since**
        
            OOo 2.0
        """
        ...
    @RestartAtEachPage.setter
    def RestartAtEachPage(self, value: bool) -> None:
        ...
    @property
    def SeparatorInterval(self) -> int:
        """
        The line separator is shown every SeparatorIntervalth line.
        """
        ...
    @SeparatorInterval.setter
    def SeparatorInterval(self, value: int) -> None:
        ...
    @property
    def SeparatorText(self) -> str:
        """
        specifies the string that is used for the line separator.
        """
        ...
    @SeparatorText.setter
    def SeparatorText(self, value: str) -> None:
        ...

